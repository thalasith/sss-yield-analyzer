version: "3"
services:
  postgres:
    image: "postgres:latest"
    restart: always
    volumes:
      - pgvol:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres_password
  api:
    build:
      dockerfile: Dockerfile
      context: ./server
    restart: always
    volumes:
      - /app/node_modules
      - ./server:/app
    networks:
      - app-network
    environment:
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  scheduler:
    build:
      dockerfile: Dockerfile
      context: ./scheduler
    restart: always
    volumes:
      - /app/node_modules
      - ./scheduler:/app
    environment:
      - PGUSER=postgres
      - PGHOST=postgres
      - PGDATABASE=postgres
      - PGPASSWORD=postgres_password
      - PGPORT=5432
  client:
    build:
      dockerfile: Dockerfile
      context: ./client
    restart: always
    volumes:
      - /app/node_modules
      - ./client:/app
    environment:
      - WDS_SOCKET_PORT=0
    networks:
      - app-network
  nginx:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
    depends_on:
      - client
      - api
    networks:
      - app-network
    ports:
      - "80:80"
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - webserver
    command: certonly --webroot --webroot-path=/var/www/html --email boris.tsao@gmail.com --agree-tos --no-eff-email --staging -d skellieyieldanalyzer.com  -d www.skellieyieldanalyzer.com
volumes:
  pgvol:
    certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /home/sammy/node_project/views/
      o: bind

networks:
  app-network:
    driver: bridge
